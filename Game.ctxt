#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ This\ class\ is\ part\ of\ the\ "University\ escape"\ application.\ \r\n\ "University\ Escape"\ is\ a\ very\ simple,\ text\ based\ adventure\ game.\r\n\ \r\n\ To\ play\ this\ game,\ create\ an\ instance\ of\ this\ class\ and\ call\ the\ "play"\r\n\ method.\r\n\ \r\n\ This\ main\ class\ creates\ and\ initialises\ all\ the\ others\:\ it\ creates\ all\r\n\ rooms,\ creates\ the\ parser\ and\ starts\ the\ game.\ It\ also\ evaluates\ and\r\n\ executes\ the\ commands\ that\ the\ parser\ returns.\r\n\ \r\n\ @author\ Michael\ K\u00F6lling\ and\ David\ J.\ Barnes\r\n\ @editor\ Ethan\ Jones\r\n\ @version\ 2016.02.29\r\n
comment1.params=args
comment1.target=void\ main(java.lang.String[])
comment1.text=\r\n\ Allows\ for\ game\ to\ be\ downloaded\ and\ played\ without\ needing\ the\ source\ code.\r\n
comment10.params=
comment10.target=void\ printHelp()
comment10.text=\r\n\ Print\ out\ some\ help\ information.\r\n\ Here\ we\ print\ some\ stupid,\ cryptic\ message\ and\ a\ list\ of\ the\r\n\ command\ words.\r\n\ \r\n\ Pre\ condition\:\ the\ play()\ method\ is\ called\ and\ the\ command\ word\ is\ typed\ in\r\n\ properly\ in\ casing\ and\ spelling\r\n\ \r\n\ Post\ condition\:\ Prints\ a\ cryptic\ message\ and\ shows\ the\ command\ words\r\n
comment11.params=command
comment11.target=void\ goRoom(Command)
comment11.text=\r\n\ Try\ to\ in\ to\ one\ direction.\ If\ there\ is\ an\ exit,\ enter\ the\ new\r\n\ room,\ otherwise\ print\ an\ error\ message.\r\n\ \r\n\ Pre\ condition\:\ The\ play()\ method\ is\ called\ and\ the\ command\ word\ go\ is\ typed\r\n\ followed\ by\ the\ direction\ that\ the\ player\ wishes\ to\ go\ in\r\n\ \r\n\ Post\ condition\:\ If\ there\ is\ no\ second\ word,\ a\ message\ is\ printed.\ There\ are\ checks\ for\r\n\ locked\ doors\ so\ the\ player\ cannot\ access\ rooms\ they\ have\ not\ unlocked\ yet.\ There\ is\ a\ moves\ counter\r\n\ that\ is\ shown\ at\ the\ end\ of\ the\ game\ that\ ticks\ up\ with\ each\ move\ the\ player\ makes.\r\n
comment12.params=room
comment12.target=boolean\ checkRoom(Room)
comment12.text=\r\n\ Checks\ to\ see\ if\ the\ room\ is\ locked\ or\ unlocked\r\n\ \r\n\ Pre\ Condition\:\ the\ play()\ method\ is\ called\ and\ the\ command\ word\ is\ typed\ properly\r\n\ \r\n\ Post\ condition\:\ determines\ if\ the\ room\ the\ player\ is\ trying\ to\ enter\ is\ locked\ or\ unlocked.\r\n\ This\ is\ done\ using\ if/else\ statements\ that\ return\ true\ or\ false\ based\ on\ the\ state\ of\ the\ rooms.\r\n\ \r\n\ @return\ true\ or\ false\ depending\ on\ the\ status\ of\ the\ room(locked\ or\ unlocked)\r\n
comment13.params=
comment13.target=void\ inventory()
comment13.text=\r\n\ Outputs\ items\ that\ are\ currently\ in\ the\ inventory\r\n\ \r\n\ Pre\ condition\:\ the\ play()\ method\ is\ called\ and\ the\ command\ word\ is\ typed\ \r\n\ with\ proper\ casing\ and\ spelling\r\n\ \r\n\ Post\ condition\:\ outputs\ the\ items\ that\ are\ currently\ in\ the\ inventory.\ \r\n\ Will\ not\ output\ the\ item\ "allNotes"\ because\ it\ is\ not\ needed.\r\n
comment14.params=
comment14.target=void\ search()
comment14.text=\r\n\ searches\ the\ room\ for\ any\ objects\ that\ are\ currently\ in\ the\ room\r\n\ \r\n\ Pre\ Condition\:\ The\ play()\ method\ must\ be\ caled\ and\ the\ command\ word\ is\ typed\r\n\ with\ proper\ casing\ and\ spelling\r\n\ \r\n\ Post\ condition\:\ if\ in\ the\ rooms\:\ math,\ union1,\ closet1,\ office,\ physics,\r\nlibrary,\ \ or\ compsci,\ it\ will\ put\ the\ item\ in\ your\ inventory.\ If\ the\ item\ is\ already\r\n\ in\ your\ inventory\ or\ has\ been\ used,\ it\ will\ return\ a\ message\ saying\ that\r\n\ the\ room\ has\ already\ been\ searched.\ \r\n
comment15.params=item
comment15.target=void\ use(java.lang.String)
comment15.text=\r\n\ uses\ the\ object\ that\ the\ player\ wants\ to\ use\r\n\ \r\n\ Pre\ condition\:\ the\ play()\ method\ must\ be\ called\ and\ the\ command\ word\ must\ be\ typed\ \r\n\ with\ proper\ casing\ and\ spelling.\ However,\ the\ items\ used\ do\ not\ have\ to\ be\ \r\n\ in\ proper\ casing,\ but\ they\ have\ to\ have\ proper\ spelling.\r\n\ \r\n\ Post\ condition\:\ a\ message\ is\ outputted\ if\ the\ item\ is\ not\ recognized,\ if\ it\ is\ misspelled\ then\r\n\ the\ player\ just\ needs\ to\ type\ it\ in\ again\ spelled\ correclty.\ If\ the\ player\ does\ not\ have\ the\ item\r\n\ they\ are\ trying\ to\ use,\ it\ will\ also\ output\ a\ message\ telling\ them\ that\ they\ do\ not\ have\ that\ item.\r\n\ \r\n
comment16.params=
comment16.target=void\ speak()
comment16.text=\r\n\ Another\ gag\ command\r\n\ \r\n\ Pre\ condition\:\ the\ play()\ method\ must\ be\ called\ and\ the\ command\ word\ must\ be\r\n\ typed\ in\ proper\ case\ and\ spelling.\r\n\ \r\n\ Post\ condition\:\ Prints\ a\ different\ message\ if\ in\ the\ dungeon,\ otherwise\ you\ start\ talking\ to\ yourself.\r\n\ The\ special\ message\ is\ just\ you\ attempting\ to\ talk\ to\ a\ wall...\ unsuccessfully.\r\n
comment17.params=
comment17.target=boolean\ getHasAllNotes()
comment17.text=\r\n\ Internal\ helper\ method\ that\ shows\ if\ all\ the\ notes\ have\ been\ collected\r\n\ \r\n\ Pre\ condition\:\ the\ play()\ method\ is\ called,\ difficulty\ is\ selected\ and\ the\ player\ has\ found\ all\ the\ notes\r\n\ \r\n\ Post\ condition\:\ returns\ if\ the\ player\ has\ all\ the\ notes\r\n\ \r\n\ @return\ true\ if\ the\ player\ has\ all\ the\ notes,\ false\ if\ the\ player\ does\ not\r\n
comment18.params=
comment18.target=void\ teleport()
comment18.text=\r\n\ Helper\ that\ allows\ the\ teleporter\ to\ work.\r\n\ \r\n\ Pre\ condition\:\ the\ play()\ method\ has\ been\ called\r\n\ \r\n\ Post\ condition\:\ teleports\ somewhere\ random\ on\ the\ map\r\n\ \r\n
comment19.params=
comment19.target=void\ youWin()
comment19.text=\r\n\ Helper\ method\ that\ allows\ you\ to\ win.\r\n\ \r\n\ Pre\ condition\:\ the\ play()\ method\ has\ been\ called.\r\n\ \r\n\ Post\ condition\:\ you\ won\ the\ game,\ it\ is\ over.\r\n
comment2.params=
comment2.target=Game()
comment2.text=\r\n\ Create\ the\ game\ and\ initialise\ its\ internal\ map.\r\n\ \r\n\ Pre\ condition\:\ none\r\n\ \r\n\ Post\ condition\:\ Rooms\ and\ items\ are\ initialized,\ and\ all\ booleans\ to\ lock\ doors\ are\ set\ to\ false.\r\n
comment20.params=
comment20.target=void\ setAnyInInventory()
comment20.text=\r\n\ Mutator\ method\ for\ the\ anyInInventory\ boolean.\ Tells\ if\ there\ are\ any\ items\ in\ the\ inventory.\r\n\ \r\n\ Pre\ condition\:\ the\ play()\ method\ has\ been\ called\r\n\ \r\n\ Post\ condition\:\ sets\ the\ anyInInventory\ field\ to\ true\ or\ false\ depending\ on\ if\ the\ player\ has\ any\ items\r\n
comment21.params=
comment21.target=boolean\ getAnyInInventory()
comment21.text=\r\n\ Accessor\ method\ that\ accesses\ the\ anyInInventory\ boolean\r\n\ \r\n\ Pre\ conditoin\:\ the\ play()\ method\ has\ been\ called\r\n\ \r\n\ Post\ condition\:\ If\ any\ item\ is\ in\ the\ inventory,\ it\ is\ returned\ as\ true,\r\n\ otherwise\ it\ is\ returned\ as\ false.\r\n\ @return\ true\ if\ there\ are\ any\ items\ in\ the\ inventory\r\n
comment22.params=command
comment22.target=boolean\ quit(Command)
comment22.text=\r\n\ "Quit"\ was\ entered.\ Check\ the\ rest\ of\ the\ command\ to\ see\r\n\ whether\ we\ really\ quit\ the\ game.\r\n\ \r\n\ @return\ true,\ if\ this\ command\ quits\ the\ game,\ false\ otherwise.\r\n
comment3.params=
comment3.target=void\ createRooms()
comment3.text=\r\n\ Create\ all\ the\ rooms\ and\ link\ their\ exits\ together.\r\n\ \r\n\ Pre\ condition\:\ Game\ constructor\ must\ be\ called.\r\n\ \r\n\ Post\ condition\:\ All\ rooms\ are\ created\ and\ connected\ in\ some\ way.\ \r\n\ The\ player\ starts\ in\ the\ front\ room,\ every\ room\ is\ given\ a\ description\r\n\ which\ is\ printed\ when\ the\ player\ enters\ the\ room\ which\ the\ description\r\n\ belongs\ to.\ Every\ room\ except\ the\ teleporter\ and\ gate\ will\ have\ exits.\r\n
comment4.params=
comment4.target=void\ createItems()
comment4.text=\r\n\ Creates\ all\ items\ in\ the\ game.\r\n\ \r\n\ Pre\ condition\:\ Game\ constructor\ must\ be\ called.\r\n\ \r\n\ Post\ condition\:\ declares\ and\ initializes\ the\ 10\ objects\ in\ the\ game.\ \r\n
comment5.params=
comment5.target=void\ play()
comment5.text=\r\n\ Main\ play\ routine.\ Loops\ until\ end\ of\ play.\r\n\ \r\n\ Pre\ condition\:\ The\ Game\ constructor\ must\ be\ called\r\n\ \r\n\ Post\ condition\:\ The\ game\ willl\ continue\ to\ run\ until\ wantToQuit\ \r\n\ is\ equal\ to\ true.\ The\ game\ is\ finished\ one\ of\ two\ ways,\ either\ shouting\r\n\ five\ times\ and\ losing\ in\ the\ only\ way\ possible\ or\ making\ \r\n\ it\ to\ the\ gate\ with\ the\ gate\ key\ to\ win.\r\n
comment6.params=
comment6.target=void\ printFirstWelcome()
comment6.text=\r\n\ Print\ out\ the\ opening\ message\ for\ the\ player.\r\n\ \r\n\ Pre\ condition\:\ the\ method\ play()\ has\ been\ called.\r\n\ \r\n\ Post\ condition\:\ prints\ the\ first\ part\ of\ the\ introduction\ to\ the\ game.\r\n
comment7.params=
comment7.target=boolean\ difficulty()
comment7.text=\r\n\ Prints\ out\ the\ difficulty\ selection\ statement\r\n\ \r\n\ Pre\ condition\:\ the\ play()\ method\ must\ be\ called\r\n\ \r\n\ Post\ condition\:\ asigns\ the\ difficulty\ chosen\ to\ the\ difficulty\ string,\r\n\ which\ determines\ how\ many\ notes\ are\ required\ for\ completion\ of\ the\ game.\r\n
comment8.params=
comment8.target=void\ printSecondWelcome()
comment8.text=\r\n\ print\ out\ the\ message\ after\ difficulty\ selection.\r\n\ \r\n\ Pre\ condition\:\ the\ method\ play()\ has\ been\ called.\r\n\ \r\n\ Post\ condition\:\ prints\ the\ final\ part\ of\ the\ introduction\ to\ the\ game.\r\n
comment9.params=command
comment9.target=boolean\ processCommand(Command)
comment9.text=\r\n\ Given\ a\ command,\ process\ (that\ is\:\ execute)\ the\ command.\r\n\ \r\n\ Pre\ Condition\:\ the\ method\ play()\ has\ been\ called\ and\ the\ user\r\n\ types\ in\ the\ command\ words\ with\ proper\ case\ and\ spelling.\r\n\ If\ the\ command\ word\ isn't\ on\ the\ list,\ a\ message\ will\ be\ printed\ telling\r\n\ the\ user\ that\ the\ command\ doesn't\ exist\r\n\ \r\n\ Post\ Condition\:\ The\ different\ commands\ are\ run\ if\ the\ user\ used\ them.\r\n\ Some\ are\ carried\ out\ using\ methods\ inside\ the\ listed\ command,\r\n\ others\ are\ carried\ out\ using\ helper\ methods.\r\n\ \r\n\ @param\ command\ The\ command\ to\ be\ processed.\r\n\ \r\n\ @return\ true\ If\ the\ command\ ends\ the\ game,\ false\ otherwise.\r\n
numComments=23
